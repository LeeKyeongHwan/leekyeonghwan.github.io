<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript this 정리</title>
      <link href="/2019/10/09/javascript-this/"/>
      <url>/2019/10/09/javascript-this/</url>
      
        <content type="html"><![CDATA[<p>자바스크립트에서 <code>this</code>는 호출되는 방식에 따라 달라지기 때문에, 이해하기 너무 어렵다.<br>그래서 아예 대표적인 몇 가지를 그냥 외워버리기로 했다.</p><ol><li><p>자유함수 호출<br>가장 기본적인 경우, 별다른 조건이 없을 때에 <em>this</em>는 전역객체를 바라본다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span> === <span class="built_in">window</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="keyword">this</span>)) <span class="comment">// [object Window]</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">freeFunction</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span> === <span class="built_in">window</span>) <span class="comment">// true</span></span><br><span class="line">&#125;</span><br><span class="line">freeFunction()</span><br></pre></td></tr></table></figure><blockquote><p>browser의 전역객체는 window<br>node의 전역객체는 global</p></blockquote></li><li><p>생성자 호출<br><em>new</em> 키워드를 이용한 생성자 호출시에 함수 내부 <em>this</em>는 새로운 객체를 바라본다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NewFunction</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = <span class="string">'이름'</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>) <span class="comment">// NewFunction</span></span><br><span class="line">  <span class="built_in">console</span>.log(toString.call(<span class="keyword">this</span>)) <span class="comment">// [object Object]</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name) <span class="comment">// 이름</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 생성자 호출 */</span></span><br><span class="line"><span class="keyword">let</span> fun = <span class="keyword">new</span> NewFunction()</span><br><span class="line"><span class="built_in">console</span>.log(fun.name) <span class="comment">// 이름</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 일반함수 호출 */</span></span><br><span class="line"><span class="keyword">let</span> fun2 = NewFunction()</span><br><span class="line"><span class="built_in">console</span>.log(fun2.name) <span class="comment">// Uncaught TypeError: Cannot read property 'name' of undefined</span></span><br></pre></td></tr></table></figure></li><li><p>Object의 Method 호출<br>Object의 Method를 호출했을 때엔 <em>this</em>는 Object를 가리킨다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> car = &#123;</span><br><span class="line">  name: <span class="string">'myCar'</span>,</span><br><span class="line">  color: <span class="string">'red'</span>,</span><br><span class="line">  <span class="comment">/* Method */</span></span><br><span class="line">  getName: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>) <span class="comment">// car &#123;name: 'myColor', color: 'red', getName () ... &#125;</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name) <span class="comment">// myCar</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/* Method 축약형 */</span></span><br><span class="line">  getColor () &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>) <span class="comment">// car &#123;name: 'myColor', color: 'red', getName () ... &#125;</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.color) <span class="comment">// red</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/* arrow function의 경우 다른 규칙이 적용된다. 4번 참고 */</span></span><br><span class="line">  getArrow: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>) <span class="comment">// Window</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name) <span class="comment">// undefined</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.color) <span class="comment">// undefined</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">car.getColor()</span><br><span class="line">car.getName()</span><br><span class="line">car.getArrow()</span><br></pre></td></tr></table></figure></li><li><p>Arrow Function 호출<br>ES6에서 추가된 Arrow Function의 경우, 생성된 시점의 주변 스코프의 <em>this</em>를 갖게된다</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> office = &#123;</span><br><span class="line">  pencil: <span class="number">4</span>,</span><br><span class="line">  getArrow: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      getArrow가 생성될 때의 주변 스코프인 office 객체,</span></span><br><span class="line"><span class="comment">      office 객체의 this는 Window객체이므로 getArrow의 this는 Window를 바라본다</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>) <span class="comment">// Window</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.pencil) <span class="comment">// undefined</span></span><br><span class="line">  &#125;,</span><br><span class="line">  getPencil () &#123;</span><br><span class="line">    <span class="comment">/* getPencil은 일반적인 method이므로 위의 3번 규칙을 따라 this는 office 객체를 바라본다 */</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.pencil) <span class="comment">// 4</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> getPpencilFun = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">/* 1번규칙인 일반 함수 호출에 의해 Window를 바라본다 */</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.pencil) <span class="comment">// undefined</span></span><br><span class="line">    &#125;</span><br><span class="line">    getPpencilFun()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> getPencilArrow = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">        getPencilArrow arrow function 규칙에 의해</span></span><br><span class="line"><span class="comment">        getPencil method가 생성될 때의 this인 office 객체를 바라본다</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.pencil) <span class="comment">// 4</span></span><br><span class="line">    &#125;</span><br><span class="line">    getPencilArrow()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">office.getArrow()</span><br><span class="line">office.getPencil()</span><br></pre></td></tr></table></figure></li><li><p>call, apply, bind로 함수 호출<br>TBD</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
